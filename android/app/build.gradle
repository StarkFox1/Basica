def localProperties = new Properties()

def localPropertiesFile = rootProject.file('local.properties')

if (localPropertiesFile.exists()) {

    localPropertiesFile.withReader('UTF-8') { reader ->

        localProperties.load(reader)

    }

}




def flutterRoot = localProperties.getProperty('flutter.sdk')

if (flutterRoot == null) {
<<<<<<< HEAD

    throw  GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")

=======
    throw  GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
>>>>>>> 34e6da9d58d1eb92e39063ec18bebe4ed486c7c3
}




def flutterVersionCode = localProperties.getProperty('flutter.versionCode')

if (flutterVersionCode == null) {

    flutterVersionCode = '1'

}




def flutterVersionName = localProperties.getProperty('flutter.versionName')

if (flutterVersionName == null) {

    flutterVersionName = '1.0'

}

def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')

if (flutterMinSdkVersion == null) {

    flutterMinSdkVersion = '21'

}
def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (flutterMinSdkVersion == null) {
    flutterMinSdkVersion = '21'
}
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"





android {

    namespace "com.example.basica"

    compileSdkVersion flutter.compileSdkVersion

    ndkVersion flutter.ndkVersion
<<<<<<< HEAD

    aaptOptions.cruncherEnabled = false

    aaptOptions.useNewCruncher = false

   

=======
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    
>>>>>>> 34e6da9d58d1eb92e39063ec18bebe4ed486c7c3
    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8

    }




    kotlinOptions {

        jvmTarget = '1.8'

    }




    sourceSets {

        main.java.srcDirs += 'src/main/kotlin'

    }




    defaultConfig {

        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).

        applicationId "com.example.basica"

        // You can update the following values to match your application needs.

        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
<<<<<<< HEAD

        minSdkVersion flutterMinSdkVersion.toInteger()

=======
        minSdkVersion flutterMinSdkVersion.toInteger()
>>>>>>> 34e6da9d58d1eb92e39063ec18bebe4ed486c7c3
        targetSdkVersion flutter.targetSdkVersion

        versionCode flutterVersionCode.toInteger()

        versionName flutterVersionName

    }




    buildTypes {

        release {

            // TODO: Add your own signing config for the release build.

            // Signing with the debug keys for now, so `flutter run --release` works.

            signingConfig signingConfigs.debug

        }

    }

}




flutter {

    source '../..'

}




dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}